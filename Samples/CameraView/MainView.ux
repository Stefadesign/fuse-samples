<!-- TODO: IsCurrentlyRecording, startVideo, endVideo -->
<App Background="#000">
	<iOS.StatusBarConfig Style="Light" />
	<MemoryPolicy ux:Global="UnloadImmediately" UnloadInBackground="True" UnusedTimeout="1" UnpinInvisible="True" />

	<JavaScript>
		var Observable = require("FuseJS/Observable");
		var FileSystem = require("FuseJS/FileSystem");

		var path = FileSystem.dataDirectory + "/";
		var library = Observable();
		var image = Observable("");

		var flashIsOn = Observable(false);

		var imageObject = {};

		function takePicture() {
			cameraPanel.takePicture({callback: function(err, img) {
				if (img !== null) {
					imageObject = img;
					image.value = img.path;
				}
			}});
		}

		function reset() {
			image.value = "";
			flashIsOn.value = false;
		}

		function savePicture() {
			var dest = path + imageObject.name;
			FileSystem.copySync(imageObject.path, dest);
			library.add(dest);
			reset();
		}

		function swapCamera() {
			cameraPanel.swapCamera();
		}

		function toggleFlash() {
			flashIsOn.value = ! flashIsOn.value;
			if (flashIsOn.value) {
				cameraPanel.enableFlash();
			} else {
				cameraPanel.disableFlash();
			}
		}

		module.exports = {
			library: library,
			image: image,
			takePicture: takePicture,
			reset: reset,
			savePicture: savePicture,
			swapCamera: swapCamera,
			cameraDirection: cameraPanel.CurrentCameraDirection.map(function(x) {
				return x.substr(0,1);
			}),
			toggleFlash: toggleFlash,
			flashState: flashIsOn.map(function(x) {
				var res = "Flash: ";
				if (x) {
					res += "On";
				} else {
					res += "Off";
				}
				return res;
			})
		};
	</JavaScript>

	<DockPanel Margin="8">

		<StatusBarBackground Dock="Top" />
		<BottomBarBackground Dock="Bottom" />

		<!-- the saved picture library at the top -->
		<Panel Dock="Top" Height="64" Color="#fff1">
			<WhileEmpty Items="{library}">
				<Text Value="Saved pictures will appear here" Color="#fffa" Alignment="Center" />
			</WhileEmpty>
			<ScrollView AllowedScrollDirections="Horizontal">
				<StackPanel Orientation="Horizontal" Margin="8" ItemSpacing="4">
					<Each Items="{library}">
						<Rectangle Aspect="1" BoxSizing="FillAspect" Width="56" CornerRadius="2">
							<Stroke Width="1" Color="#fffa" />
							<ImageFill File="{}" StretchMode="UniformToFill" WrapMode="ClampToEdge" />
						</Rectangle>
					</Each>
				</StackPanel>
			</ScrollView>
		</Panel>

		<Panel Margin="0,8">

			<!-- temporary picture can take a while to show up, use busy -->
			<!-- CameraView should set busy while initialising too -->
			<WhileBusy>
				<Text Value="Loading..." Color="#fffa" Alignment="Center" />
			</WhileBusy>

			<Panel Padding="8" Color="#fff1">

				<!-- when there is a temporary picture taken -->
				<WhileString Value="{image}" Equals="" Invert="true">

					<!-- save and discard action buttons -->
					<StackPanel Alignment="BottomCenter" Margin="16" Orientation="Horizontal" ItemSpacing="16">
						<Rectangle Color="#2a4" CornerRadius="2" Width="112" Height="56" Clicked="{savePicture}">
							<Text Value="Save" Alignment="Center" Color="#fff" />
							<Shadow />
						</Rectangle>
						<Rectangle Color="#f42" CornerRadius="2" Width="112" Height="56" Clicked="{reset}">
							<Text Value="Discard" Alignment="Center" Color="#fff" />
							<Shadow />
						</Rectangle>
					</StackPanel>

					<!-- the temporary picture itself -->
					<Image File="{image}" MemoryPolicy="UnloadImmediately" StretchMode="UniformToFill" />

				</WhileString>

				<!-- when there is no temporary picture -->
				<WhileString Value="{image}" Equals="">
					<!-- we put all of the things we want on top of the CameraView inside the same NativeViewHost -->
					<NativeViewHost>

						<!-- toggle flash state -->
						<Rectangle Width="88" Height="40" CornerRadius="2" Alignment="TopLeft" Margin="8" Clicked="{toggleFlash}" HitTestMode="LocalBounds">
							<Stroke Width="1" Color="#fffa" />
							<Text Value="{flashState}" Color="#fffa" Alignment="Center" />
						</Rectangle>

						<!-- toggle camera direction -->
						<Rectangle Width="40" Aspect="1" BoxSizing="FillAspect" CornerRadius="2" Alignment="TopRight" Margin="8" Clicked="{swapCamera}" HitTestMode="LocalBounds">
							<Stroke Width="1" Color="#fffa" />
							<Text Value="{cameraDirection}" Color="#fffa" Alignment="Center" />
						</Rectangle>

						<!-- take picture button -->
						<StackPanel Alignment="BottomCenter" Margin="16" Orientation="Horizontal" ItemSpacing="16">
							<Circle Width="56" Aspect="1" BoxSizing="FillAspect" Color="#f42" Clicked="{takePicture}" Alignment="BottomCenter">
								<Stroke Width="2" Color="#fff" />
							</Circle>
						</StackPanel>

						<!-- the camera view itself -->
						<CameraView ux:Name="cameraPanel" Facing="Back" />

					</NativeViewHost>
				</WhileString>
			</Panel>
		</Panel>

	</DockPanel>
</App>
